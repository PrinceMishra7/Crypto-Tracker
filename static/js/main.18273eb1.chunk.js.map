{"version":3,"sources":["components/context/CryptoContext.js","components/header/Header.js","config/api.js","components/banner/Carousel.js","components/banner/Banner.js","components/CoinsTable.js","pages/Home.js","config/data.js","components/SelectButton.js","components/CoinInfo.js","pages/Coin.js","App.js","components/context/CryptoState.js","index.js"],"names":["CryptoContext","createContext","Header","navigate","useNavigate","globalState","useContext","darkTheme","createTheme","palette","mode","React","createElement","ThemeProvider","theme","AppBar","color","position","Container","Toolbar","Typography","onClick","flexGrow","sx","fontFamily","fontWeight","cursor","Select","variant","minWidth","height","marginRight","size","value","currency","onChange","e","setCurrency","target","MenuItem","CoinList","concat","SingleCoin","id","HistoricalChart","days","arguments","length","undefined","TrendingCoins","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Carousel","profit","_useState","useState","_useState2","_slicedToArray","trending","setTrending","_useContext","symbol","fetchTrendingCoins","_ref","_asyncToGenerator","_callee","response","json","_context","fetch","t0","console","log","message","apply","useEffect","className","style","display","alignItems","AliceCarousel","mouseTracking","infinite","autoPlayInterval","animationDuration","disableDotsControls","disableButtonsControls","responsive","0","items","512","map","coin","price_change_percentage_24h","Link","flexDirection","textTransform","to","src","image","alt","marginBottom","toFixed","fontSize","current_price","toString","replace","autoPlay","Banner","Fragment","backgroundImage","paddingTop","justifyContent","textAlign","CoinsTable","coins","setCoins","_useState3","_useState4","loading","setLoading","_useState5","_useState6","search","setSearch","_useState7","_useState8","page","setPage","fetchCoin","numberWithCommas","x","TableRowStyle","backgroundColor","&:hover","handleSearch","filter","toLowerCase","includes","margin","TextField","label","width","TableContainer","component","Paper","LinearProgress","Table","aria-label","TableHead","TableRow","head","TableCell","align","TableBody","row","scope","gap","market_cap","Pagination","button","count","padding","event","window","scroll","Home","chartDays","SelectButton","children","selected","border","borderRadius","paddingLeft","paddingRight","CoinInfo","ChartJS","register","_toConsumableArray","registerables","useParams","historicData","setHistoricData","flag","setFlag","setDays","fetchData","_ref2","prices","styled","_ref3","_defineProperty","marginTop","breakpoints","down","CircularProgress","thickness","Line","data","labels","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","borderColor","options","elements","point","radius","day","Coin","setCoin","imgUrl","setImgUrl","setDesc","mrank","setMrank","_useState9","_useState10","cprice","setCprice","_useState11","_useState12","mcap","setMcap","description","en","split","large","market_cap_rank","market_data","paddingBottom","App","BrowserRouter","Routes","Route","path","element","CryptoState","setSymbol","Provider","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.18273eb1.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst CryptoContext = createContext();\r\n\r\n\r\nexport default CryptoContext\r\n","import React,{useContext} from 'react'\r\nimport { Select, MenuItem, AppBar, Container, Toolbar, Typography } from '@mui/material';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport CryptoContext from '../context/CryptoContext';\r\nconst Header = () => {\r\n  let navigate = useNavigate();\r\n  const globalState=useContext(CryptoContext);\r\n  function handleClick() {\r\n    navigate(\"/\");\r\n  }\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      mode: 'dark',\r\n    },\r\n  });\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <AppBar color='transparent' position='static'>\r\n        <Container>\r\n          <Toolbar>\r\n            <Typography onClick={handleClick} flexGrow={1} sx={{\r\n              color: \"gold\",\r\n              fontFamily: \"'Montserrat', sans-serif\",\r\n              fontWeight: \"bold\",\r\n              cursor: \"pointer\"\r\n            }\r\n            }>\r\n              Crypto Tracker\r\n            </Typography>\r\n            <Select variant='outlined' sx={{ minWidth: 100, height: 40, marginRight: 15,}} size=\"small\"\r\n            value={globalState.currency} \r\n            onChange={(e)=>{\r\n              globalState.setCurrency(e.target.value);\r\n            }}>\r\n              <MenuItem value={\"INR\"}>INR</MenuItem>\r\n              <MenuItem value={\"USD\"}>USD</MenuItem>\r\n            </Select>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export const CoinList = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\r\n\r\nexport const SingleCoin = (id) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}`;\r\n\r\nexport const HistoricalChart = (id, days = 365, currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`;\r\n\r\nexport const TrendingCoins = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=gecko_desc&per_page=10&page=1&sparkline=false&price_change_percentage=24h`;","import React, { useEffect, useContext, useState } from 'react'\r\nimport { TrendingCoins } from '../../config/api'\r\nimport CryptoContext from '../context/CryptoContext'\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport { Link } from \"react-router-dom\";\r\nconst Carousel = () => {\r\n  const carouselStyle = {\r\n    height: \"50%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  }\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n  const carouselItem = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    textTransform: \"uppercase\",\r\n    color: \"white\",\r\n  }\r\n  var profit = false\r\n  const [trending, setTrending] = useState([])\r\n  const { currency, symbol } = useContext(CryptoContext)\r\n  const fetchTrendingCoins = async () => {\r\n    try {\r\n      const response = await fetch(TrendingCoins(currency),{\r\n        method:'GET',\r\n        mode:'cors',\r\n      })\r\n    const json = await response.json();\r\n    setTrending(json)\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n    \r\n  }\r\n  const responsive = {\r\n    0: {\r\n      items: 2,\r\n    },\r\n    512: {\r\n      items: 4,\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    fetchTrendingCoins()\r\n  }, [currency])\r\n  return (\r\n    <div className=\"carousel\" style={carouselStyle}>\r\n      <AliceCarousel\r\n        mouseTracking\r\n        infinite\r\n        autoPlayInterval={1000}\r\n        animationDuration={1500}\r\n        disableDotsControls\r\n        disableButtonsControls\r\n        responsive={responsive}\r\n        items={trending.map((coin) => {\r\n          profit = false;\r\n          if (coin.price_change_percentage_24h >= 0) {\r\n            profit = true;\r\n          }\r\n          return (\r\n            <Link style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              cursor: \"pointer\",\r\n              textTransform: \"uppercase\",\r\n              color: \"white\",\r\n            }} to={`/coins/${coin.id}`}>\r\n              <img\r\n                src={coin.image}\r\n                alt={coin.name}\r\n                height=\"80\"\r\n                style={{ marginBottom: 10 }}\r\n              />\r\n              <span>\r\n                {coin.symbol}\r\n                &nbsp;\r\n                <span  style={{\r\n              color: profit===true ? \"rgb(14, 203, 129)\" : \"red\",\r\n              fontWeight: 500,\r\n            }}>\r\n              {\r\n                profit>0?\"+\":\"\"\r\n              }\r\n               {coin.price_change_percentage_24h.toFixed(2)}%\r\n\r\n                </span>\r\n              </span>\r\n\r\n<span style={{ fontSize: 22, fontWeight: 500 }}>\r\n          {symbol} {numberWithCommas(coin.current_price.toFixed(2))}\r\n        </span>\r\n            </Link>\r\n          )\r\n\r\n        })}\r\n        autoPlay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Carousel","import React from 'react'\r\nimport { Container, Typography } from '@mui/material';\r\nimport Carousel from './Carousel';\r\nconst Banner = () => {\r\n    const bannerStyle = {\r\n        backgroundImage: \"url(./banner2.jpg)\",\r\n    }\r\n    const bannerContentStyle = {\r\n        height: 400,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        paddingTop: 5,\r\n        justifyContent: \"space-around\",\r\n    }\r\n    const taglineStyle = {\r\n        display: \"flex\",\r\n        height: \"40%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\",\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"banner\" style={bannerStyle}>\r\n                <Container className='banner-content' sx={bannerContentStyle}>\r\n                   \r\n                        <div className=\"tagline\" style={taglineStyle}>\r\n                            <Typography variant=\"h2\"\r\n                                style={{\r\n                                    fontWeight: \"bold\",\r\n                                    marginBottom: 15,\r\n                                    fontFamily: \"Montserrat\",\r\n                                }}>\r\n                                Crypto Tracker\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle2\"\r\n                                style={{\r\n                                    color: \"darkgrey\",\r\n                                    textTransform: \"capitalize\",\r\n                                    fontFamily: \"Montserrat\",\r\n                                }}>\r\n                                Get all the Info regarding your favorite Crypto Currency\r\n                            </Typography>\r\n                        </div>\r\n\r\n               \r\n\r\n                    <Carousel />\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Banner","import React, { useState, useEffect, useContext} from 'react'\r\nimport { CoinList } from '../config/api'\r\nimport { LinearProgress, TableCell, TableRow, Paper, TextField, Container,  Typography } from '@mui/material';\r\nimport { Table, TableHead, TableBody, TableContainer,Pagination } from '@mui/material';\r\nimport CryptoContext from './context/CryptoContext'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nconst CoinsTable = () => {\r\n  let navigate = useNavigate();\r\n  const [coins, setCoins] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [search, setSearch] = useState(\"\")\r\n  const [page, setPage] = useState(1);\r\n  const { currency, symbol } = useContext(CryptoContext)\r\n  const fetchCoin = async () => {\r\n    setLoading(true);\r\n    try {\r\n    const response = await fetch(CoinList(currency),{\r\n      method:'GET',\r\n      mode:'cors',\r\n    });\r\n    const json = await response.json()\r\n    setCoins(json)\r\n    setLoading(false)\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n    \r\n  }\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      mode: 'dark',\r\n    },\r\n  });\r\n  const TableRowStyle={\r\n    backgroundColor:\"#16171a\",\r\n    cursor:\"pointer\",\r\n    \"&:hover\":{\r\n      backgroundColor:\"#131111\",\r\n    },\r\n    fontFamily:\"Montserrat\"\r\n  }\r\n  useEffect(() => {\r\n    fetchCoin();\r\n  }, [currency])\r\n  const handleSearch = () => {\r\n    return coins.filter(\r\n      (coin) =>\r\n        coin.name.toLowerCase().includes(search) ||\r\n        coin.symbol.toLowerCase().includes(search)\r\n    );\r\n  };\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Container style={{ textAlign: \"center\" }}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{ margin: 18, fontFamily: \"Montserrat\" }}\r\n        >\r\n          Cryptocurrency Prices by Market Cap\r\n        </Typography>\r\n        <TextField\r\n          label=\"Search For a Crypto Currency..\"\r\n          variant=\"outlined\"\r\n          style={{ marginBottom: 20, width: \"100%\" }}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n        <TableContainer component={Paper}>\r\n          {\r\n            loading ? <LinearProgress style={{ backgroundColor: \"gold\" }} /> : (\r\n              <Table aria-label=\"simple table\">\r\n                <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\r\n                  <TableRow>\r\n                    {\r\n                      [\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\r\n                        <TableCell\r\n                          style={{\r\n                            color: \"black\",\r\n                            fontWeight: \"700\",\r\n                            fontFamily: \"Montserrat\",\r\n                            \r\n                          }}\r\n                          key={head}\r\n                          align={head === \"Coin\" ? \"\" :head===\"Price\"?\"center\": \"right\"}\r\n                         \r\n                        >\r\n                          {head}\r\n                        </TableCell>\r\n                      ))\r\n                    }\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n\r\n                  {\r\n                    handleSearch()\r\n                    .slice((page-1)*10,(page-1)*10+10)\r\n                    .map((row) => {\r\n                      var profit = row.price_change_percentage_24h > 0;\r\n                      return (\r\n                        <TableRow key={row.name}\r\n                        sx={\r\n                          TableRowStyle\r\n                        }\r\n                          onClick={() => {\r\n                            navigate(`/coins/${row.id}`)\r\n                          }}\r\n                        >\r\n                          {/* first cell */}\r\n                          <TableCell\r\n                            component=\"th\"\r\n                            scope=\"row\"\r\n                            style={{\r\n                              display: \"flex\",\r\n                              gap: 15,\r\n                            }}\r\n                          >\r\n                            <img\r\n                              src={row.image}\r\n                              alt={row.name}\r\n                              height=\"50\"\r\n                              style={{ marginBottom: 10 }}\r\n                            />\r\n                            <div\r\n                              style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  textTransform: \"uppercase\",\r\n                                  fontSize: 22,\r\n                                }}\r\n                              >\r\n                                {row.symbol}\r\n                              </span>\r\n                              <span style={{ color: \"darkgrey\" }}>\r\n                                {row.name}\r\n                              </span>\r\n                            </div>\r\n                          </TableCell>\r\n\r\n                          {/* second cell */}\r\n                          <TableCell>\r\n                          {symbol}{\" \"}\r\n                          {numberWithCommas(row.current_price.toFixed(2))}\r\n                          </TableCell>\r\n                          \r\n                              {/* third cell */}\r\n                              <TableCell\r\n                               align=\"right\"\r\n                               style={{\r\n                                 color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n                                 fontWeight: 500,\r\n                               }}>\r\n                              {\r\n                               profit>0?\"+\":\"\"\r\n                              }\r\n                                {row.price_change_percentage_24h.toFixed(2)}%\r\n                              </TableCell>\r\n                              {/* fourth cell */}\r\n                              <TableCell align='right'>\r\n                              {symbol}{\" \"}\r\n                          {numberWithCommas(\r\n                            row.market_cap.toString().slice(0, -6)\r\n                          )}\r\n                          M\r\n                              </TableCell>\r\n                            \r\n\r\n                        </TableRow>\r\n                      )\r\n                    })\r\n                  }\r\n\r\n\r\n                </TableBody>\r\n\r\n\r\n\r\n              </Table>\r\n            )\r\n          }\r\n        </TableContainer>\r\n           {/* Pagination */}\r\n           <Pagination\r\n          sx={{button:{color: 'gold'}}}\r\n           count={(handleSearch().length/10).toFixed(0)}\r\n           style={{\r\n            padding: 20,\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onChange={\r\n            (event,value)=>{\r\n              setPage(value);\r\n              window.scroll(0,450);\r\n\r\n            }\r\n          }\r\n           >\r\n           </Pagination>\r\n      </Container>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default CoinsTable","import React from 'react'\r\nimport Banner from '../components/banner/Banner'\r\nimport CoinsTable from '../components/CoinsTable'\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Banner/>\r\n      <CoinsTable/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","export const chartDays = [\r\n    {\r\n      label: \"24 Hours\",\r\n      value: 1,\r\n    },\r\n    {\r\n      label: \"30 Days\",\r\n      value: 30,\r\n    },\r\n    {\r\n      label: \"3 Months\",\r\n      value: 90,\r\n    },\r\n    {\r\n      label: \"1 Year\",\r\n      value: 365,\r\n    },\r\n  ];","import React from \"react\";\r\nconst SelectButton = ({ children, selected, onClick }) => {\r\n  return (\r\n    <span onClick={onClick} style={{ border: \"1px solid gold\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    fontFamily: \"Montserrat\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: selected ? \"gold\" : \"\",\r\n    color: selected ? \"black\" : \"\",\r\n    fontWeight: selected ? 700 : 500,\r\n    \"&:hover\": {\r\n      backgroundColor: \"gold\",\r\n      color: \"black\",\r\n    },\r\n    width: \"22%\",}}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\nexport default SelectButton;","import React,{useState,useEffect,useContext} from 'react'\r\nimport {chartDays} from '../config/data'\r\nimport {HistoricalChart} from '../config/api'\r\nimport { useParams } from 'react-router-dom';\r\nimport CryptoContext from '../components/context/CryptoContext'\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport {styled} from '@mui/material/styles';\r\nimport { Chart as ChartJS, registerables } from 'chart.js';\r\nimport { Line } from 'react-chartjs-2'\r\nimport SelectButton from './SelectButton';\r\nimport { CircularProgress } from '@mui/material';\r\nconst CoinInfo = ({coin}) => {\r\n  ChartJS.register(...registerables);\r\n  const { id } = useParams();\r\n  const {currency,symbol}=useContext(CryptoContext);\r\n  const [historicData, setHistoricData] = useState();\r\n  const [flag,setFlag]=useState(false);\r\n  const [days,setDays]=useState(1);\r\n\r\n  const fetchData=async()=>{\r\n      console.log(id);\r\n      try {\r\n        const response=await fetch(HistoricalChart(id,days,currency),{\r\n          method:'GET',\r\n          mode:'cors',\r\n        })\r\n        const json=await response.json();\r\n        setFlag(true)\r\n        console.log(json.prices)\r\n        setHistoricData(json.prices)\r\n\r\n      } catch (error) {\r\n        console.log(error.message)\r\n      }\r\n  }\r\n  useEffect(() => {\r\n      fetchData();\r\n      \r\n  }, [currency,days])\r\n  const Container = styled('div')(({ theme }) => ({\r\n    width: '75%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 25,\r\n    padding: 40,\r\n    [theme.breakpoints.down('md')]: {\r\n      width: '100%',\r\n      marginTop: 0,\r\n      padding: 20,\r\n      paddingTop: 0,\r\n    },\r\n  }));\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      mode: 'dark',\r\n    },\r\n  });\r\n  return (\r\n      <ThemeProvider theme={darkTheme}>\r\n    <Container>\r\n      {\r\n        (!historicData | !flag)?(\r\n          <CircularProgress\r\n            style={{ color: \"gold\" }}\r\n            size={250}\r\n            thickness={1}\r\n          />\r\n        ):(\r\n          <>\r\n          <Line \r\n          data={\r\n            {\r\n              // takes an arrray of labels and this labels will visible on the x-axis\r\n              // in our case we will display the date if days=30 or 3 months or 1 year\r\n              // and if days=1 we will display the time\r\n              \r\n              labels:historicData.map((coin)=>{\r\n                // coin[0] is the time and coin[1] is the price\r\n                let date=new Date(coin[0]);\r\n                // in case if time is greater than 12 i.e. 13:00 PM then we will subtract 12 from it\r\n                // we want to show time between 1 to 12 only\r\n                let time=date.getHours()>12?`${date.getHours()-12}:${date.getMinutes()} PM`:\r\n                `${date.getHours()}:${date.getMinutes()} AM`;\r\n                // if days=1 then we will return time else we will return date\r\n                return days===1?time:date.toLocaleDateString();\r\n\r\n              }),\r\n              \r\n              // it takes an array of objects and each object is a dataset \r\n              datasets:[\r\n                {\r\n                  data:historicData.map((coin)=>coin[1]),\r\n                  label:`Price (Past ${days} Days) in ${symbol}`,\r\n                  borderColor:'#EEBC1D',\r\n                },\r\n              ],\r\n\r\n            }\r\n          }\r\n          options={{\r\n                elements: {\r\n                  point: {\r\n                    radius: 1,\r\n                  },\r\n                },\r\n              }}\r\n\r\n              />\r\n\r\n              <div style={{\r\n                display: \"flex\",\r\n                marginTop: 20,\r\n                justifyContent: \"space-around\",\r\n                width: \"100%\",\r\n              }}>\r\n                {\r\n                  chartDays.map((day)=>\r\n                    <SelectButton \r\n                    key={day.value}\r\n                    onClick={()=>{\r\n                      setDays(day.value)\r\n                      setFlag(false)\r\n                    }\r\n                    }\r\n                    selected={day.value===days}\r\n                    > \r\n                    {day.label}\r\n                    </SelectButton>\r\n                  )\r\n                }\r\n              </div>\r\n\r\n          \r\n          </>\r\n        )\r\n      }\r\n      </Container>\r\n      </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default CoinInfo\r\n","import React from 'react'\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { SingleCoin } from '../config/api.js';\r\nimport CryptoContext from '../components/context/CryptoContext.js';\r\nimport CoinInfo from '../components/CoinInfo.js';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport { Typography } from '@mui/material';\r\nimport './Coin.css';\r\nconst Coin = () => {\r\n  const { id } = useParams();\r\n  const { currency, symbol } = useContext(CryptoContext)\r\n  const [coin, setCoin] = useState({});\r\n  const [imgUrl, setImgUrl] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\")\r\n  const [mrank, setMrank] = useState(0);\r\n  const [cprice, setCprice] = useState(0)\r\n  const [mcap, setMcap] = useState(0)\r\n  const fetchCoin = async () => {\r\n    const response = await fetch(SingleCoin(id),{\r\n      method:'GET',\r\n      mode:'cors',\r\n    });\r\n    const json = await response.json();\r\n    setDesc(json.description.en.split(\". \")[0]);\r\n    setImgUrl(json.image.large);\r\n    setMrank(json.market_cap_rank);\r\n    setCprice(json.market_data.current_price[currency.toLowerCase()]);\r\n    setMcap(json.market_data.market_cap[currency.toLowerCase()])\r\n    setCoin(json);\r\n  }\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n  useEffect(() => {\r\n    fetchCoin();\r\n  }, [])\r\n\r\n\r\n  if (!coin) return <LinearProgress style={{ backgroundColor: \"gold\" }} />;\r\n  return (\r\n    <div className=\"coin-container\">\r\n      <div className='coin-sidebar'>\r\n        <img src={imgUrl} alt={coin.name} height=\"200\" style={{ marginBottom: '20' }} />\r\n        <Typography variant='h3' sx={{\r\n          fontWeight: \"bold\",\r\n          marginBottom: \"20 !important\",\r\n          fontFamily: \"Montserrat\",\r\n        }} >\r\n          {coin.name}\r\n        </Typography>\r\n\r\n        <Typography variant='subtitle1'\r\n          style={{\r\n            width: \"100%\",\r\n            fontFamily: \"Montserrat\",\r\n            padding: 25,\r\n            paddingBottom: 15,\r\n            paddingTop: 0,\r\n            textAlign: \"justify\",\r\n          }}>\r\n          {desc}\r\n        </Typography>\r\n        <div className=\"market-data\">\r\n          <span style={{ display: \"flex\" }}>\r\n            <Typography variant=\"h5\" style={{\r\n              fontWeight: \"bold\",\r\n              marginBottom: \"20 !important\",\r\n              fontFamily: \"Montserrat\",\r\n            }}>\r\n              Rank:\r\n            </Typography>\r\n            &nbsp; &nbsp;\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                fontFamily: \"Montserrat\",\r\n              }}\r\n            >\r\n              {numberWithCommas(mrank)}\r\n            </Typography>\r\n          </span>\r\n          <span style={{ display: \"flex\" }}>\r\n            <Typography variant=\"h5\" style={{\r\n              fontWeight: \"bold\",\r\n              marginBottom: \"20 !important\",\r\n              fontFamily: \"Montserrat\",\r\n            }}>\r\n              Current Price:\r\n            </Typography>\r\n            &nbsp; &nbsp;\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                fontFamily: \"Montserrat\",\r\n              }}\r\n            >\r\n              {symbol}{\" \"}{numberWithCommas(cprice)}\r\n            </Typography>\r\n          </span>\r\n\r\n          <span style={{ display: \"flex\" }}>\r\n            <Typography variant=\"h5\" style={{\r\n              fontWeight: \"bold\",\r\n              marginBottom: \"20 !important\",\r\n              fontFamily: \"Montserrat\",\r\n            }}>\r\n              Market Cap:\r\n            </Typography>\r\n            &nbsp; &nbsp;\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{\r\n                fontFamily: \"Montserrat\",\r\n              }}\r\n            >\r\n              {symbol}{\" \"}\r\n              {numberWithCommas(mcap.toString()\r\n                  .slice(0, -6)\r\n              )}\r\n              M\r\n            </Typography>\r\n          </span>\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <CoinInfo coin={coin}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Coin\r\n","import './App.css';\nimport React from \"react\";\nimport { BrowserRouter, Routes,Route } from 'react-router-dom';\nimport Header from './components/header/Header'\nimport Home from './pages/Home'\nimport Coin from './pages/Coin';\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"app\">\n     <Header></Header>\n     <Routes>\n      <Route path='/' element={<Home/>}></Route>\n      <Route path='/coins/:id' element={<Coin/>}></Route>\n     </Routes>\n    </div>\n    </BrowserRouter>\n  );\n}\nexport default App;\n","import React,{useState,useEffect} from 'react'\r\nimport CryptoContext from './CryptoContext'\r\nconst CryptoState = ({children}) => {\r\n  const [currency, setCurrency] = useState(\"INR\");\r\n  const [symbol, setSymbol] = useState(\"₹\");\r\n  useEffect(() => {\r\n    if(currency===\"INR\"){\r\n      setSymbol(\"₹\");\r\n    } \r\n    else if(currency===\"USD\") {\r\n      setSymbol(\"$\");\r\n    }\r\n    \r\n  }, [currency])\r\n  \r\n  return (\r\n   <CryptoContext.Provider value={{currency,symbol,setCurrency}}>\r\n    {children}\r\n   </CryptoContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CryptoState","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport CryptoState from './components/context/CryptoState';\nimport 'react-alice-carousel/lib/alice-carousel.css';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n \n  <React.StrictMode>\n    <CryptoState>\n      <App />\n  </CryptoState>\n  </React.StrictMode>\n);\n\n\n"],"sourceRoot":""}